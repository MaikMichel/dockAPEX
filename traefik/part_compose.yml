services:

  tomcat:
    ports:
      - 9080:${TOMCAT_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tomcat.rule=Host(`dockapex.die21.de`)"
      - "traefik.http.routers.tomcat.entrypoints=websecure"
      - "traefik.http.routers.tomcat.tls.certresolver=myresolver"
      # the middleware 'add-context' must be defined so that the regex rules can be attached to it
      - "traefik.http.routers.tomcat.middlewares=add-context"

      # here is the logic provided by gustavomtborges of this gist:
      - "traefik.http.middlewares.add-context.redirectregex.regex=^https:\\/\\/([^\\/]+)\\/?$$"
      - "traefik.http.middlewares.add-context.redirectregex.replacement=https://$$1/ords/r/dockapex/demo"


  ################################################
  ####        Traefik Proxy Setup           #####
  ###############################################
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    ports:
      - "80:80"   # <== http
      - "443:443" # <== https
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.filePath=/logs/access.log"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=maik.michel78+acme@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "./traefik/config:/letsencrypt"
      - "./traefik/logs:/logs"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
    #### Labels define the behaviour and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.traefik.rule=Host(`dockapex.die21.de`) && (PathPrefix(`/traefik`) || PathPrefix(`/api`))" # <== Setting the domain for the dashboard
       #### set traefik dashboard
      - "traefik.http.routers.traefik.service=api@internal"

      #### set middlewares: stripprefix for dashboard
      - "traefik.http.routers.traefik.middlewares=mystrip"
      - "traefik.http.middlewares.mystrip.stripprefix.prefixes=/traefik"

      # #### set TLS
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"

      #### set a rule to redirect all http requests to https
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    depends_on:
      tomcat:
        condition: service_healthy
