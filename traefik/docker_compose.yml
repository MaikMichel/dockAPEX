services:

  # TODO: das hier nur wenn tomcat mode
  tomcat:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tomcat.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.tomcat.entrypoints=websecure"
      - "traefik.http.routers.tomcat.tls.certresolver=myresolver"
      # the middleware 'add-context' must be defined so that the regex rules can be attached to it
      - "traefik.http.routers.tomcat.middlewares=add-context"

      # here is the logic to force root domain to redirect to default url
      - "traefik.http.middlewares.add-context.redirectregex.regex=^https:\\/\\/([^\\/]+)\\/?$$"
      - "traefik.http.middlewares.add-context.redirectregex.replacement=https://$$1/${TRAEFIK_DEFAULT_ROUTE}"

  # TODO: brauchen hier noch den ords mode


  # TODO: AOP nur wenn true
  aop:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.aop.rule=Host(`${TRAEFIK_DOMAIN}`) && PathPrefix(`/aop`)"
      - "traefik.http.routers.aop.entrypoints=websecure"
      - "traefik.http.routers.aop.tls.certresolver=myresolver"
      - "traefik.http.routers.aop.tls: true"

      - "traefik.http.routers.aop.middlewares=basic_auth,aopstrip"
      - "traefik.http.middlewares.basic_auth.basicauth.users=${TRAEFIK_DASHBOARD_USER}"
      - "traefik.http.middlewares.aopstrip.stripprefix.prefixes=/aop"

  ################################################
  ####        Traefik Proxy Setup           #####
  ###############################################
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    ports:
      - "80:80"   # <== http
      - "443:443" # <== https
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.filePath=/logs/access.log"
      - "--api.insecure=false"
      - "--api.dashboard=${TRAEFIK_DASHBOARD}"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - tfk_conf:/letsencrypt
      - tfk_logs:/logs
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
    #### Labels define the behaviour and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN}`) && (PathPrefix(`/traefik`) || PathPrefix(`/api`))" # <== Setting the domain for the dashboard
       #### set traefik dashboard
      - "traefik.http.routers.traefik.service=api@internal"

      - "traefik.http.routers.traefik.middlewares=basic-auth-global,mystrip"
      - "traefik.http.middlewares.basic-auth-global.basicauth.users=${TRAEFIK_DASHBOARD_USER}"

      #### set middlewares: stripprefix for dashboard
      # - "traefik.http.routers.traefik.middlewares=mystrip"
      - "traefik.http.middlewares.mystrip.stripprefix.prefixes=/traefik"

      # #### set TLS
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"

      #### set a rule to redirect all http requests to https
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    depends_on:
      tomcat:
        condition: service_healthy
      aop:
        condition: service_started

volumes:
  tfk_logs:
    driver: local
  tfk_conf:
    driver: local